lio_sam:

  # Topics
  point_cloud_topic: "points_raw"               # Point cloud data
  imu_topic: "imu_raw"                         # IMU data
  odom_topic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gps_topic: "odometry/gpsz"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidar_frame: "base_link"
  base_link_frame: "base_link"
  odom_frame: "odom"
  map_frame: "map"

  # RTK Settings
  use_imu_heading_init: true           # if using GPS data, set to "true"
  use_gps_elevation: false                      # if GPS elevation is bad, set to "false"
  gps_cov_threshold: 2.0                        # m^2, threshold for using GPS data
  pose_cov_threshold: 25.0                      # m^2, threshold for using GPS data
  
  # Export settings
  save_pcd: false                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
  save_pcd_directory: "/Downloads/LOAM/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

  # Sensor Settings
  sensor: VELODYNE                            # lidar sensor type, 'velodyne' or 'ouster' or 'livox'
  N_SCAN: 16                                  # number of lidar channel (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
  HORIZON_RESOLUTION: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, Livox Horizon: 4000)
  downsample_rate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
  lidar_min_range: 1.0                          # default: 1.0, minimum lidar range to be used
  lidar_max_range: 1000.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  imu_acc_noise: 3.9939570888238808e-03
  imu_gyr_noise: 1.5636343949698187e-03
  imu_acc_bias: 6.4356659353532566e-05
  imu_gyr_bias: 3.5640318696367613e-05
  imu_gravity: 9.80511
  imu_rpy_weight: 0.01

  # Extrinsics: T_lb (imu 到 lidar的坐标变换)
  ext_trans: [0.0, 0.0, 0.0]
  ext_rot: [-1, 0, 0,
             0, 1, 0,
             0, 0, -1]
  ext_rpy: [0, -1, 0,
            1, 0, 0,
            0, 0, 1]
  # extrinsicRot: [1, 0, 0,
  #                 0, 1, 0,
  #                 0, 0, 1]
  # extrinsicRPY: [1, 0, 0,
  #                 0, 1, 0,
  #                 0, 0, 1]

  # LOAM feature threshold
  edge_threshold: 1.0
  surf_threshold: 0.1
  edge_feature_min_valid_num: 10
  surf_feature_min_valid_num: 100

  # voxel filter paprams
  odom_surf_leaf_size: 0.4                     # default: 0.4 - outdoor, 0.2 - indoor
  mapping_corner_leaf_size: 0.2                    # default: 0.2 - outdoor, 0.1 - indoor
  mapping_surf_leaf_size: 0.4                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
  core_num: 4                              # number of cores for mapping optimization
  mapping_process_interval: 0.15                  # seconds, regulate mapping frequency

  # Surrounding map
  surrounding_keyframe_adding_dist_threshold: 1.0   # meters, regulate keyframe adding threshold
  surrounding_keyframe_adding_angle_threshold: 0.2  # radians, regulate keyframe adding threshold
  surrounding_keyframe_density: 2.0               # meters, downsample surrounding keyframe poses   
  surrounding_keyframe_search_radius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

  # Loop closure
  loop_closure_enable_flag: true
  loop_closure_frequency: 1.0                     # Hz, regulate loop closure constraint add frequency
  surrounding_keyframe_size: 50                   # submap size (when loop closure enabled)
  history_keyframe_search_radius: 15.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  history_keyframe_search_time_diff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
  history_keyframe_search_num: 25                  # number of hostory key frames will be fused into a submap for loop closure
  history_keyframe_fitness_score: 0.3              # icp threshold, the smaller the better alignment

  # Visualization
  global_map_visualization_search_radius: 1000.0    # meters, global map visualization radius
  global_map_visualization_pose_density: 10.0       # meters, global map visualization keyframe density
  global_map_visualization_leaf_size: 1.0           # meters, global map visualization cloud density




# Navsat (convert GPS coordinates to Cartesian)
navsat:
  frequency: 50
  wait_for_datum: false
  delay: 0.0
  magnetic_declination_radians: 0
  yaw_offset: 0
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false

# EKF for Navsat
ekf_gps:
  publish_tf: false
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.01
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu_correct
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [false, false, false,
                true,  true,  true,
                false, false, false,
                false, false, true,
                true,  true,  true]
  imu0_differential: false
  imu0_queue_size: 50 
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_differential: false
  odom0_queue_size: 10

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [  1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015]